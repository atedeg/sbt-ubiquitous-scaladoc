tagFormat: '${version}'
branches:
  - 'main'
  - name: 'beta'
    prerelease: true
  - name: 'alpha'
    prerelease: true

plugins:
  - - '@semantic-release/commit-analyzer'
    - preset: conventionalcommits
  - '@semantic-release/release-notes-generator'
  - '@semantic-release/changelog'
  - - '@google/semantic-release-replace-plugin'
    - replacements:
        - files:
            - build.sbt
          from: 'version := .*'
          to: 'version := "${nextRelease.version}",'
          results:
            - file: build.sbt
              hasChanged: true
              numMatches: 1
              numReplacements: 1
          countMatches: true
  - - '@semantic-release/exec'
    - publishCmd: "bash ./release.sh ${options.branch} ${nextRelease.version}"
      failCmd: | 
        git push origin --delete ${nextRelease.version}
        git reset --hard HEAD~1
        git push --force
  - - '@semantic-release/git'
    - assets:
        - build.sbt
        - CHANGELOG.md
  - '@semantic-release/github'
